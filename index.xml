<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Grant</title><link>https://Grant-S-Z.github.io/GrantSite/</link><description>Recent content on Grant</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 08 Mar 2024 02:11:28 +0800</lastBuildDate><atom:link href="https://Grant-S-Z.github.io/GrantSite/index.xml" rel="self" type="application/rss+xml"/><item><title>Notes of Geant4</title><link>https://Grant-S-Z.github.io/GrantSite/post/notes-of-geant4/</link><pubDate>Fri, 08 Mar 2024 02:11:28 +0800</pubDate><guid>https://Grant-S-Z.github.io/GrantSite/post/notes-of-geant4/</guid><description>Toolkit Fundamentals Global Usage Classes Signature 为了使用统一的命名方式，遵循 Geant4 的一些约定，Geant4 内核的每一个类的名字都以前缀 G4 开头。为了便于移植，在 Geant4 中使用 G4 类型(G4int, G4float, G4double 等)代替 C 中原有的类型(int, float, double 等)。
基本类型：G4int, G4long, G4float, G4double, G4bool, G4complex, G4String.
多数基本类型定义包含了头文件 globals.hh.
System of Units Input 必须对引入数据指定单位：
G4double Size = 15 * km; G4double density = 11 * mg/cm3; 对于交互式命令，要求：
/gun/energy 15.2 keV /gun/position 3 2 -7 meter Output 可以使用喜欢的单位输出数据，只要将这些数据除以相应的单位：
G4cout &amp;lt;&amp;lt; KineticEnergy/keV &amp;lt;&amp;lt; &amp;#34; keV&amp;#34;; 也可以让 Geant4 来选择使用最合适的单位来输出数据，只要指定用户数据的类别(属于 Length, Time, Energy 等)，例如：</description></item><item><title>Emacs 二三事</title><link>https://Grant-S-Z.github.io/GrantSite/post/emacs-%E4%BA%8C%E4%B8%89%E4%BA%8B/</link><pubDate>Tue, 23 Jan 2024 20:43:01 +0800</pubDate><guid>https://Grant-S-Z.github.io/GrantSite/post/emacs-%E4%BA%8C%E4%B8%89%E4%BA%8B/</guid><description>安装 在 MacOS 上安装 Emacs：
brew tap railwaycat/emacsmacport brew install emacs-mac 安装后 Emacs 位于路径 /opt/homebrew/opt/emacs-mac, 可以直接拖动 app 至程序坞。
由于 Emacs 安装时参数对使用有影响，下面陈述一些参数的作用：
--with-modules
支持动态模块。使用 Emacs rime 等功能时需要启用。
常见问题记录 使用 Emacs 时遇到问题是很正常的，以下是我的一些记录，包括配置、问题与解决方式。
Rime 首先需要安装并配置鼠须管：
brew install --cask squirrel 配置方式可以参考帮助文档。我直接使用了雾凇拼音的安装脚本，对配置文件仅做些许改动。现在可以在 MacOS 上使用 Rime 输入法了。
为了在 Emacs 上使用 Rime，需要下载编译好的 librime：
curl -L -O https://github.com/rime/librime/releases/download/1.7.1/rime-1.7.1-osx.zip unzip rime-1.7.1-osx.zip -d ~/.emacs.d/librime rm -rf rime-1.7.1-osx.zip 下面需要在 Emacs 上安装 rime. 我的配置如下：
(use-package rime ;; 输入法 :custom (default-input-method &amp;#34;rime&amp;#34;) (rime-librime-root &amp;#34;~/.</description></item><item><title>辐射探测中的统计学</title><link>https://Grant-S-Z.github.io/GrantSite/post/%E8%BE%90%E5%B0%84%E6%8E%A2%E6%B5%8B%E4%B8%AD%E7%9A%84%E7%BB%9F%E8%AE%A1%E5%AD%A6/</link><pubDate>Tue, 23 Jan 2024 20:37:43 +0800</pubDate><guid>https://Grant-S-Z.github.io/GrantSite/post/%E8%BE%90%E5%B0%84%E6%8E%A2%E6%B5%8B%E4%B8%AD%E7%9A%84%E7%BB%9F%E8%AE%A1%E5%AD%A6/</guid><description>核衰变的统计分布 二项式分布 假设事件 \(A\) 在单次试验中发生的概率为 \(p\), 在同一试验中不发生的概率为 \(q = 1 - p\). 随机变量 \(\xi\) 表示在一组 \(N\) 次独立无关的试验中事件 \(A\) 发生的次数，则
\[P(\xi = n) = \frac{N!}{(N-n)!n!} p^{n}q^{N-n}. \tag{1}\]
期望：\(E(\xi) = Np\). 方差：\(D(\xi) = Np(1 - p)\). 在核衰变过程中，基本规律为
\[N(t) = N_{0}e^{-\lambda t}. \tag{2}\]
因而，在 \(t\) 时间内发生的总衰变数为 \(n\) 的概率
\[P(\xi = n) = \frac{N_{0}!}{(N_{0} - n)!n!}(1 - e^{-\lambda t})^{n}(e^{-\lambda t})^{N_{0}-n}. \tag{3}\]
泊松分布 当二项式分布中的 \(N\) 很大，\(p\) 很小且 \(m = Np\) 为不大的常数时，可化为泊松分布
\[P(\xi = n) = \frac{m^n}{n!</description></item><item><title>Start Today</title><link>https://Grant-S-Z.github.io/GrantSite/post/start-today/</link><pubDate>Fri, 24 Nov 2023 16:16:48 +0800</pubDate><guid>https://Grant-S-Z.github.io/GrantSite/post/start-today/</guid><description>Start Now I&amp;rsquo;ll start my diary now.
I&amp;rsquo;ll try to not stay in my comfort zone.
I&amp;rsquo;ll try to start my new life.</description></item><item><title>Use plantuml in org</title><link>https://Grant-S-Z.github.io/GrantSite/post/use-plantuml-in-org/</link><pubDate>Tue, 21 Nov 2023 14:39:58 +0800</pubDate><guid>https://Grant-S-Z.github.io/GrantSite/post/use-plantuml-in-org/</guid><description>What is plantuml? https://plantuml.com/zh/
Plantuml samples in org There are still many other samples waiting for my encounters.
Sequence Diagram @startuml scale 2560*1600 title Sequence Diagram actor User box &amp;#34;Multichannel Spectrometer Program&amp;#34; #LightBlue participant miniMCA participant Usb participant ThdbDA participant ThdbAD participant PulseHeight participant Spectrum participant Ram == Before User == ThdbDA --&amp;gt; ThdbAD: Analog Signal DA_DA (AD_DA) ThdbAD --&amp;gt; PulseHeight: Digital Signal ad_data PulseHeight --&amp;gt; Spectrum: pulse_height and pulse_indicator == User Start == User -&amp;gt; miniMCA: miniMCA -&amp;gt; Usb: Start (usb_read_data) Usb -&amp;gt; Spectrum: cmd_start Spectrum -&amp;gt; Ram: address_a and data_a Ram -&amp;gt; Usb: address_b and q_b Usb -&amp;gt; miniMCA: usb_write_data miniMCA -&amp;gt; User: @enduml Module Diagram @startuml scale 2560*1600 title Module Diagram node final01 node ThdbDA node ThdbAD node PulseHeight node Spectrum node Usb node isp1362 node hex node ram node pll final01 -- ThdbDA final01 -- ThdbAD final01 -- PulseHeight final01 -- Spectrum final01 -- Usb final01 -- isp1362 final01 -- hex final01 -- ram final01 -- pll @enduml</description></item><item><title>Build a blog</title><link>https://Grant-S-Z.github.io/GrantSite/post/build-a-blog/</link><pubDate>Tue, 21 Nov 2023 14:12:38 +0800</pubDate><guid>https://Grant-S-Z.github.io/GrantSite/post/build-a-blog/</guid><description>How to build your own blog? I wanna build my own blog for a long time. Long ago, I have heard about Hugo, which is a convenient tool to build a static website quickly.
Following the course of Youtube, I have probably finished it, and take a record for it now.
Install Hugo Easy for Macos. Make sure that you have installed brew.
brew install hugo Create local website Be familiar with the commands of Hugo.</description></item></channel></rss>